// <auto-generated />
using System;
using ApiPerfil.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiPerfil.Migrations
{
    [DbContext(typeof(ApiPerfilDataContext))]
    [Migration("20251015183546_AddAdminUser")]
    partial class AddAdminUser
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApiPerfil.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nome" }, "IX_Categoria_Nome")
                        .IsUnique();

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("ApiPerfil.Models.Permissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nome" }, "IX_Permissao_Nome")
                        .IsUnique();

                    b.ToTable("Permissoes", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "UsuarioPadrao"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "GerenteDeEstoque"
                        });
                });

            modelBuilder.Entity("ApiPerfil.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Nome");

                    b.Property<decimal>("Preco")
                        .HasColumnType("DECIMAL(10, 2)")
                        .HasColumnName("Preco");

                    b.Property<int>("Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INT")
                        .HasDefaultValue(0)
                        .HasColumnName("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Produtos", null, t =>
                        {
                            t.HasCheckConstraint("CHK_Produtos_Preco", "[Preco] >= 0");

                            t.HasCheckConstraint("CHK_Produtos_Quantidade", "[Quantidade] >= 0");
                        });
                });

            modelBuilder.Entity("ApiPerfil.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Email");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("NomeCompleto");

                    b.Property<decimal>("Saldo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(10, 2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("Saldo");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("SenhaHash");

                    b.Property<string>("Telefone")
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Telefone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "CPF" }, "IX_User_CPF")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "IX_User_Email")
                        .IsUnique();

                    b.ToTable("Usuarios", null, t =>
                        {
                            t.HasCheckConstraint("CHK_Usuarios_Saldo", "[Saldo] >= 0");
                        });

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "00000000000",
                            Email = "admin@email.com",
                            NomeCompleto = "Admin Master",
                            Saldo = 500m,
                            SenhaHash = "10000.T+mynenJ2vkjFAjTMWvJkg==.fcN+tJH6rWsSjuvGbHlcCjaQoVEspNSczr0pwsX8v80=",
                            Telefone = "999999999"
                        });
                });

            modelBuilder.Entity("ApiPerfil.Models.Venda", b =>
                {
                    b.Property<int>("VendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendaID"));

                    b.Property<DateTime>("DataVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataVenda")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("int");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("DECIMAL(10, 2)")
                        .HasColumnName("ValorTotal");

                    b.HasKey("VendaID");

                    b.HasIndex("UsuarioID");

                    b.ToTable("Vendas", null, t =>
                        {
                            t.HasCheckConstraint("CHK_Vendas_ValorTotal", "[ValorTotal] >= 0");
                        });
                });

            modelBuilder.Entity("ApiPerfil.Models.VendaItem", b =>
                {
                    b.Property<int>("VendaItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendaItemID"));

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("DECIMAL(10, 2)")
                        .HasColumnName("PrecoUnitario");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INT")
                        .HasColumnName("Quantidade");

                    b.Property<int>("VendaID")
                        .HasColumnType("int");

                    b.HasKey("VendaItemID");

                    b.HasIndex("ProdutoID");

                    b.HasIndex("VendaID", "ProdutoID")
                        .IsUnique()
                        .HasDatabaseName("UQ_Venda_Produto");

                    b.ToTable("VendaItens", null, t =>
                        {
                            t.HasCheckConstraint("CHK_VendaItens_PrecoUnitario", "[PrecoUnitario] >= 0");

                            t.HasCheckConstraint("CHK_VendaItens_Quantidade", "[Quantidade] > 0");
                        });
                });

            modelBuilder.Entity("UsuarioPermissoes", b =>
                {
                    b.Property<int>("PermissaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PermissaoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioPermissoes");

                    b.HasData(
                        new
                        {
                            PermissaoId = 1,
                            UsuarioId = 1
                        });
                });

            modelBuilder.Entity("ApiPerfil.Models.Produto", b =>
                {
                    b.HasOne("ApiPerfil.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Produtos_Categorias");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ApiPerfil.Models.Venda", b =>
                {
                    b.HasOne("ApiPerfil.Models.Usuario", "Usuario")
                        .WithMany("Vendas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_Vendas_Usuarios");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiPerfil.Models.VendaItem", b =>
                {
                    b.HasOne("ApiPerfil.Models.Produto", "Produto")
                        .WithMany("VendaItems")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("FK_VendaItens_Produtos");

                    b.HasOne("ApiPerfil.Models.Venda", "Venda")
                        .WithMany("VendaItems")
                        .HasForeignKey("VendaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_VendaItens_Vendas");

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("UsuarioPermissoes", b =>
                {
                    b.HasOne("ApiPerfil.Models.Permissao", null)
                        .WithMany()
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioPermissoes_PermissaoId");

                    b.HasOne("ApiPerfil.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioPermissoes_UsuarioId");
                });

            modelBuilder.Entity("ApiPerfil.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("ApiPerfil.Models.Produto", b =>
                {
                    b.Navigation("VendaItems");
                });

            modelBuilder.Entity("ApiPerfil.Models.Usuario", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("ApiPerfil.Models.Venda", b =>
                {
                    b.Navigation("VendaItems");
                });
#pragma warning restore 612, 618
        }
    }
}
