// <auto-generated />
using System;
using ApiPerfil.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApiPerfil.Migrations
{
    [DbContext(typeof(ApiPerfilDataContext))]
    partial class ApiPerfilDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.29")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ApiPerfil.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR(100)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nome" }, "IX_Categoria_Nome")
                        .IsUnique();

                    b.ToTable("Categorias", (string)null);
                });

            modelBuilder.Entity("ApiPerfil.Models.Permissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR(50)")
                        .HasColumnName("Nome");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Nome" }, "IX_Permissao_Nome")
                        .IsUnique();

                    b.ToTable("Permissoes", (string)null);
                });

            modelBuilder.Entity("ApiPerfil.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoriaID")
                        .HasColumnType("INT")
                        .HasColumnName("CategoriaID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("NVARCHAR(150)")
                        .HasColumnName("Nome");

                    b.Property<decimal>("Preco")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("Preco");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INT")
                        .HasColumnName("Quantidade");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaID");

                    b.HasIndex(new[] { "Nome" }, "IX_Produto_Nome")
                        .IsUnique();

                    b.ToTable("Produtos", (string)null);
                });

            modelBuilder.Entity("ApiPerfil.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("VARCHAR(11)")
                        .HasColumnName("CPF");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("Email");

                    b.Property<string>("NomeCompleto")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("NVARCHAR(200)")
                        .HasColumnName("NomeCompleto");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("Saldo");

                    b.Property<string>("SenhaHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("VARCHAR(255)")
                        .HasColumnName("SenhaHash");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("VARCHAR(20)")
                        .HasColumnName("Telefone");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "NomeCompleto" }, "IX_User_NomeCompleto")
                        .IsUnique();

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("ApiPerfil.Models.Venda", b =>
                {
                    b.Property<int>("VendaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendaID"), 1L, 1);

                    b.Property<DateTime>("DataVenda")
                        .HasColumnType("DATETIME")
                        .HasColumnName("DataVenda");

                    b.Property<int>("UsuarioID")
                        .HasColumnType("INT")
                        .HasColumnName("UsuarioID");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("ValorTotal");

                    b.HasKey("VendaID");

                    b.HasIndex("UsuarioID");

                    b.HasIndex(new[] { "VendaID" }, "IX_Venda_VendaID")
                        .IsUnique();

                    b.ToTable("Vendas", (string)null);
                });

            modelBuilder.Entity("ApiPerfil.Models.VendaItem", b =>
                {
                    b.Property<int>("VendaItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendaItemID"), 1L, 1);

                    b.Property<decimal>("PrecoUnitario")
                        .HasColumnType("DECIMAL(10,2)")
                        .HasColumnName("PrecoUnitario");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("INT")
                        .HasColumnName("ProdutoID");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INT")
                        .HasColumnName("Quantidade");

                    b.Property<int>("VendaID")
                        .HasColumnType("INT")
                        .HasColumnName("VendaID");

                    b.HasKey("VendaItemID");

                    b.HasIndex("ProdutoID");

                    b.HasIndex("VendaID");

                    b.HasIndex(new[] { "VendaItemID" }, "IX_VendaItem_VendaItemID")
                        .IsUnique();

                    b.ToTable("VendaItens", (string)null);
                });

            modelBuilder.Entity("UsuarioPermissoes", b =>
                {
                    b.Property<int>("PermissaoId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("PermissaoId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioPermissoes");
                });

            modelBuilder.Entity("ApiPerfil.Models.Produto", b =>
                {
                    b.HasOne("ApiPerfil.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Categoria_Produto");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("ApiPerfil.Models.Venda", b =>
                {
                    b.HasOne("ApiPerfil.Models.Usuario", "Usuario")
                        .WithMany("Vendas")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Usuario_Venda");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ApiPerfil.Models.VendaItem", b =>
                {
                    b.HasOne("ApiPerfil.Models.Produto", "Produto")
                        .WithMany("VendaItems")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Produto_VendaItem");

                    b.HasOne("ApiPerfil.Models.Venda", "Venda")
                        .WithMany("VendaItems")
                        .HasForeignKey("VendaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Venda_VendaItem");

                    b.Navigation("Produto");

                    b.Navigation("Venda");
                });

            modelBuilder.Entity("UsuarioPermissoes", b =>
                {
                    b.HasOne("ApiPerfil.Models.Permissao", null)
                        .WithMany()
                        .HasForeignKey("PermissaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioPermissoes_PermissaoId");

                    b.HasOne("ApiPerfil.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioPermissoes_UsuarioId");
                });

            modelBuilder.Entity("ApiPerfil.Models.Categoria", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("ApiPerfil.Models.Produto", b =>
                {
                    b.Navigation("VendaItems");
                });

            modelBuilder.Entity("ApiPerfil.Models.Usuario", b =>
                {
                    b.Navigation("Vendas");
                });

            modelBuilder.Entity("ApiPerfil.Models.Venda", b =>
                {
                    b.Navigation("VendaItems");
                });
#pragma warning restore 612, 618
        }
    }
}
